#!/bin/bash
#
# Copyright (c) 2008 SUSE LINUX Products GmbH, Nuernberg, Germany.
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA 02111-1307 USA
#
# Author: Michael Calmer <mc@suse.de>
#         Sven Schober <sschober@suse.de>
#         Marius Tomaschewski <mt@suse.de>
#
# $Id: $
#

if test "$UID" != "0" -a "$USER" != root -a -z "$ROOT" ; then
    echo "You must be root to start $0." >&2
    exit 1
fi

# The environment variable ROOT indicates the root of the system to be
# managed by SuSEconfig when that root is not '/'
r="$ROOT"

. "$r/etc/sysconfig/network/scripts/functions.netconfig"

PROGNAME="${0##*/}"
STATEDIR="$r/var/run/netconfig/"
debug "$PROGNAME Plugin called"

. "$r/etc/sysconfig/network/config"

DNS_SERVERS=""

DESTFILE="$r/etc/named.d/forwarders.conf"
TMP_FILE=""

# *********************
# FUNCTIONS 
# *********************

function write_named_forwarders ()
{
    test -z "$1" && return 1

    debug "write_named_forwarders: $1 "

    local NAMESERVER=()

    # DESTFILE may be a symlink on a read only /-fs
    #   when, then $r/etc/named.d is be symlinked,
    #   there is IMO no need to follow symlink...
    #DST_FILE=`read_symlink "${DESTFILE}"`
    DST_FILE="${DESTFILE}"
    TMP_FILE=`mktemp "${DST_FILE}.XXXXXX"` || return 1

    if test ! -s "$DST_FILE" ; then
        touch "$DST_FILE" ; chmod 644 "$DST_FILE"
    fi

    # * copy dest => tmp to get the file attributes
    # * remove the content 
    # * print a warning on top of this file
    #cp -p "$DST_FILE" "$TMP_FILE"

    # set explicit mode on tmp file instead to preserve the
    # mode of original file that can be wrong (bnc#428458)
    chmod 644 "$TMP_FILE"

    cat << EOT > "$TMP_FILE"
#
# This file is autogenerated by netconfig!
#
# Before you change this file manually, consider to define the
# static DNS configuration using the following variables in the
# /etc/sysconfig/network/config file:
#     NETCONFIG_DNS_STATIC_SEARCHLIST
#     NETCONFIG_DNS_STATIC_SERVERS
#     NETCONFIG_DNS_FORWARDER
# or disable DNS configuration updates via netconfig by setting:
#     NETCONFIG_DNS_POLICY=''
#
# Note: Manual change of this file disables netconfig too, but
# may get lost when this file contains comments or empty lines
# only and in case of a "netconfig update -f" call.
#
# See also the netconfig(8) manual page and other documentation.
#
EOT

    for ns in $1; do
        for os in ${NAMESERVER[@]} ; do
            test "x$ns" == "x$os" && continue 2
        done

        # According to Bind 9 Administrators Reference Manual
        # there is no limit for forwarders.
        #[ ${#NAMESERVER[@]} -lt 3 ] || break

        NAMESERVER=(${NAMESERVER[@]} ${ns})
    done
    {
        echo "forwarders {"
        for ns in ${NAMESERVER[@]}; do
            echo "	${ns};"
        done
        echo "};"
    } >> "$TMP_FILE"

    check_md5_and_move "$TMP_FILE" "$DESTFILE" ".netconfig" TMP_FILE
    return $?
}

function get_dns_settings() {
    debug "exec get_dns_settings: $1"
    test -z "$1" && return 1

    get_variable "DNSSERVERS" "$1"
    if [ "x$DNSSERVERS" != "x" ]; then
        DNS_SERVERS="$DNS_SERVERS $DNSSERVERS"
        DNSSERVERS=""
    fi

    debug "exit get_dns_settings"
    return 0
}

function manage_interfaceconfig() {

    debug "manage_interfaceconfig: $1"

    test -z "$1" && return 1

    if [ ! -d "$1" ]; then
        return 1
    fi
    for CFG in `ls -X -r $1/`; do
        debug "CFG=$CFG"

        get_dns_settings "$1/$CFG"

    done
    debug "exit manage_interfaceconfig"
    return 0
}

# *********************
# EXECUTION STARTS HERE
# *********************

if [ "$NETCONFIG_DNS_FORWARDER" != "bind" ]; then
    exit 0;
fi

# just for the case we need the original value...
_NETCONFIG_DNS_POLICY="$NETCONFIG_DNS_POLICY"
if [ "$_NETCONFIG_DNS_POLICY" = "auto" ]; then
    if [ "x$NETWORKMANAGER" = "xyes" ] ; then
        #
        # Use NetworkManager policy merged data
        #
        _NETCONFIG_DNS_POLICY='NetworkManager'
    else
        #
        # We use static settings and extend them
        # with interface specific if available
        #
        _NETCONFIG_DNS_POLICY='STATIC *'
    fi
elif [ "x$_NETCONFIG_DNS_POLICY" = "x" ]; then
    #
    # empty policy means do not touch anything. 
    # successful exit.
    #
    exit 0;
fi

#
# A * or ? is evaluated in the "for loop", so we need to replace it  
#
_NETCONFIG_DNS_POLICY=`echo "$_NETCONFIG_DNS_POLICY" | \
        sed 's/\*/__ALL__/g' | sed 's/\?/__ONE__/g'`

sf=0

for POL in $_NETCONFIG_DNS_POLICY; do 
    case "$POL" in
    (NetworkManager)
        if [ "x$NETWORKMANAGER" = "xyes" ] ; then
            debug "Use NetworkManager policy merged settings"
            CFG="$STATEDIR/NetworkManager.netconfig"
            if [ -r "$CFG" ] ; then
                get_dns_settings "$CFG"
            fi
            break
        fi
    ;;
    (STATIC)
        debug "Keep Static"
        DNS_SERVERS="$DNS_SERVERS $NETCONFIG_DNS_STATIC_SERVERS"
    ;;
    (STATIC_FALLBACK)
        debug "Static Fallback"
        sf=1
    ;;
    (*)
        #
        # revert the replacement; now we want the evaluation
        #
        POL=`echo "$POL" | sed 's/__ALL__/*/g' | sed 's/__ONE__/?/g'`
        debug "Other: $POL"
        for IFDIR in $STATEDIR/$POL; do
            test -d "$IFDIR" -a \
                 -d "/sys/class/net/${IFDIR##*/}" || continue
            # proceed every interface we find with this match
            manage_interfaceconfig  "$IFDIR"
        done
    ;;
    esac
done

if [ $sf -eq 1 -a -z "$DNS_SERVERS" ]; then
    DNS_SERVERS="$NETCONFIG_DNS_STATIC_SERVERS"
fi

write_named_forwarders "$DNS_SERVERS"
RET=$?

if [ $RET -eq 1 ]; then
    # nothing changed; we are finished
    exit 0
elif [ $RET -eq 2 ]; then
   # user modified the config. Copy aborted
    echo "ATTENTION: You have modified $DESTFILE.  Leaving it untouched..."
    echo "You can find my version in $TMP_FILE ..."
    exit 20
fi

# here we should restart services if needed
if [ -x $r/etc/init.d/named ]; then
    $r/etc/init.d/named try-restart >/dev/null 2>&1
fi

exit 0;

