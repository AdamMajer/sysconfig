.\" Process this file with
.\" groff -man -Tascii foo.1
.\"
.TH IFUP 8 "August 2004" "sysconfig" "Network configuration"
.SH NAME
ifup \- start a preconfigured net interface.
.br
ifdown \- stop a (preconfigured) net interface.
.br
ifstatus \- show the state of a (preconfigured) net interface.
.br
ifrenew \- renews the dhcp lease on a net interface.
.br
ifprobe \- checks if the configuration for the interface has changed

.SH SYNOPSIS
.B if{up,down,status,renew,probe}
.B [
.I <configuration-name>
.B ]
.I <hardware-description>
.B [-o 
.I options
.B ]

.SH NOTATION
We use the terms 
.B configuration, interface 
and
.B device
in a dedicated way. A
.B device
is always a piece of hardware representing a network interface, a PCI or
PCMCIA card or a USB device. An
.B interface
then is the name of the network
interface it gets from the
kernel when the device has been registered. A 
.B configuration
is a set of
parameters which can be assigned to an interface like IP addresses or routes.

It is intentional that a configuration does not need to belong to an interface,
but to a device. For built-in devices there is most of the time a fixed
relation between
devices and interfaces, but this is no longer the case when using hotpluggable
devices. With such devices (like PCMCIA or USB) you cannot always know which
interface name you will get. So even if the interface name changes the interface
to a certain device will always have the right setup.

.SH DESCRIPTION
.B ifup
is used to bring up a preconfigured interface for networking. It is usually
invoked by the network script at boot time or by the PCMCIA/hotplug system. It
can also be used to start interfaces manually on the command line. It activates
the link, adds addresses and other parameters and sets up the routes for an
interface.
.P
.B ifdown
is used to set down the interface and flush all its addresses. It is possible
to let ifdown check the interface if it is still used before setting it down. If
configured it may then get rid of the using processes or refuse setting it
down. Have a look at
.I /etc/sysconfig/network/config 
to enable this feature.
.P
.B ifstatus
checks if the interface and its routes were set up properly.
.P
.B ifrenew
is used to renew the dhcp lease on the desired interface without shutting the
interface down. It only restarts the corresponding dhcpcd or dhclient process.
.P
.B ifprobe
checks if any of the configuration files for this interface have been changed
since the interface is up. Checked files are the corresponding ifcfg-*,
ifroute-*, ifservices-* and common configuration files config, dhcp and routes.

.B <hardware-description>
may just be the interface name.
.br
But it can be more. It describes the device of the interface to be set up. As
there is no fixed relation between devices and the names their interfaces get
from the kernel, it might be necessary to specify the device exactly. The
hardware-description may be the current interface name, the MAC address or the
bus location where the device resides. It has to be compliant with the
device naming rules as specified in
.BR getcfg(8) . 
.B ifup 
uses
.B getcfg
to obtain all missing information, for example the interface name of a device
with given hardware-description.
.br
ifup uses getcfg also to get the best matching configuration for the interface.
Every configuration is stored in files below
.I /etc/sysconfig/network 
which are named 
.BI ifcfg- <configuration-name> . 
.P
.I <configuration-name>
is the name of a configuration that should be used to set up the interface. It
may be used to circumvent the automatic search for a configuration with getcfg.
In this case the configuration names are not restricted. For example if you have
a configuration file ifcfg-my-special you may call ifup my-special <hwdesc>.

.SH PERSISTENT INTERFACE NAMES
See 
.I /usr/share/doc/packages/sysconfig/README.Persistent_Interface_Names
for more information about that.

.SH OPTIONS
.IP "The following are options to be specified after the -o switch."
.IP auto
Only set up the interface if the configuration has the STARTMODE=auto (or boot,
onboot or hotplug.)
.IP [on]boot
Alias for 'auto'.
.IP hotplug
Like auto, but do some extra jobs, because hotplug indicates that the interface
was just (un)registered. These extra jobs contain (if configured):
starting/stopping ifplugd, renaming interface and removing all status files at
ifdown.
.IP manual
This is default operation mode and sets up interfaces with STARTMODE=manual. If
option 'rc' is used which implies mode 'auto', you can force mode 'manual'. 
.IP rc
Special option for the use in
.B rcnetwork\ (/etc/init.d/network).
See section rcnetwork below.
.IP dhcp
Indicates that script is called from dhcp client.  When a interface has
BOOTPROTO=dhcp ifup/down does not execute any post action immediately.  After
dhcp client got a lease and has set ip address, it calls ifup again, this time
with option 'dhcp'. In this run we finish interface setup. 
.IP nodeps
If there are interfaces based on this interface, ifdown takes these depending
interfaces down first. If you don't like that, use 'nodeps'.
.IP prov=<n>
Use provider <n> instead that from config file. Only usefull for dialup
interfaces.
.IP debug
Be verbose.
.IP (no)syslog
With
.B nosyslog
the scripts don't send messages to syslog even if the configuration
variable
.B USE_SYSLOG 
is set to "yes". This is default for ifstatus only.
If you want also ifstatus messages send to syslog then call it with
.B syslog.
.SH FILES
.I /sbin/ifup
.RS
The script itself.
.RE
.I /etc/sysconfig/network/config
.RS
General configuration options. See section GENERAL VARIABLES below.
.RE
.I /etc/sysconfig/network/ifcfg- <configuration-name>
.RS
The files containing the configuration of the devices. 
An example that shows a typical configuration with the name
.BR ifcfg-eth0 :
.nf

IPADDRESS=10.10.11.184
NETMASK=255.255.0.0
BROADCAST=10.10.255.255
STARTMODE=onboot

.fi
.RE
.I /etc/sysconfig/network/ifroute- <configuration-name>
.RS
You can specify individual routes for every configuration in these files. See
routes (5) for a detailed description.
.RE
.I /etc/sysconfig/network/if-{up,down}.d/
.RS
Scripts in these directories will be executed when any interface is started,
if-up.d, and when any interface is stopped, if-down.d. They have to be
executable and may also be binary. The execution of these programs is controlled
by the variables
.B GLOBAL_POST_UP_EXEC
and
.B GLOBAL_PRE_DOWN_EXEC
in the network configuration file
.I /etc/sysconfig/network/config
These are not interface specific, and can have any name. If you need
interface/configfile specific scripts to be executed have a look at
.BR PRE_UP_SCRIPT ,
.BR POST_UP_SCRIPT ,
.BR PRE_DOWN_SCRIPT and
.BR POST_DOWN_SCRIPT .
.RE
.I /etc/sysconfig/network/ifservices- <configuration-name>/
.RS
If you don't have a permanent network connection and like that certain services
are not started at boot time unconditionaly but later after the network
connection was established then you can add these services here. See
.B ifservices (5) 
for a detailed description.
.RE
.I /etc/sysconfig/network/ifcfg.template
.RS
A template for writing ifcfg-* files.

.SH GENERAL VARIABLES
There are some general settings in the file
.IR /etc/sysconfig/network/config .
If needed you can also set every general variable as an individual variable in
the
.B ifcfg-*
files.
Please see the description of these variables in 
.IR /etc/sysconfig/network/config .
.PP
For dhcp there are additional global options in 
.IR /etc/sysconfig/network/dhcp .
Also these are described there and can be used individually in
.B ifcfg-*
files.

.SH rcnetwork
At boot time network devices are initialized asynchronously via hotplug. Once
this initialisation process registered an interface for it this will also
trigger a hotplug event which will call ifup. If service network was still not
started ifup will just exit. As soon as service network is active ifup will do
its job and set up the interface. Therefore the job of the network start script
consists of:
.nf
- set the 'network active' flag
- set up all interfaces already available
- wait for mandatory interfaces which are still not there
- set up tunnel, vlan, et al.
.fi

At boot time the scripts tries to determine the list of mandatory devices
automatically. It considers all interfaces that have a startmode 'auto' or
'onboot' as mandatory. Also interfaces that serve for tunnels, vlan or bonding
are considered as mandatory. Normally it waits 20 seconds for them and exits
then with failed is any mandatory interface is still missing.

Alternatively you may specify all mandatory devices manually in the variable
.B MANDATORY_DEVICES
in the file.
.IR /etc/sysconfig/network/config .
There you may also tweak the timeout in
.BR WAIT_FOR_INTERFACES .

The network script will only set up devices with with startmodes auto, onboot
or hotplug. To set up an interface with startmode manual you have to call ifup
manually. (rcnetwork calls 'ifup ... -o rc').

.SH DIAGNOSTICS
.B ifstatus
.I interface

ifup and rcnetwork write status files in
.IR /var/run/sysconfig . 
If something went
completely wrong this files might be interesting.

.SH BUGS
Please report bugs at <http://www.suse.de/feedback>
.SH AUTHOR
.nf
Christian Zoz <zoz@suse.de> -- ifup script
Michal Svec <msvec@suse.cz> -- ifup script
Bjoern Jacke -- ifup script
Mads Martin Joergensen <mmj@suse.de> -- ifup manpage 
Michal Ludvig <mludvig@suse.cz> -- tunnel support
.fi
.SH "SEE ALSO"
.BR ifcfg (5),
.BR routes (5),
.BR ifservices (5),
.BR ifcfg-wireless (5),
.BR ifcfg-tunnel (5),
.BR ifcfg-vlan (5),
.BR ifcfg-bonding (5),
.BR getcfg (8).
